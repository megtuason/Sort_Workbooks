---
uti: com.xamarin.workbook
id: 7ffa3e3d-969d-4112-9fb8-24311a0e4ec1
title: CS105A_SEARCH_TUASON
platforms:
- Console
---

```csharp
int[] intArray = {0, 1, 3, 7, 9, 12, 13, 23, 45};
public int LinearSearch(int[] arr, int target)
{
    for (int i = 0; i < arr.Length; i++)
    {
        if (target == arr[i])
        {
            return i;
        }
    }
    return -1;
}
LinearSearch(intArray, 0);
```

```csharp
//Using Recursion
int[] intArray = {0, 1, 3, 7, 9, 12, 13, 23, 45};
public int LinearSearch(int[] arr, int target, int start)
{
    if (start != arr.Length)
    {
        if (arr[start] == target)
        {
            return start;
        }
        else
        {
            return LinearSearch(arr, target, start+1);
        }
    }
    else
    {
        return -1;
    }
}
LinearSearch(intArray, 0, 0);
```

```csharp
int[] intArray = {0, 1, 3, 7, 9, 12, 13, 23, 45};

public int BinarySearch (int [] arr, int target)
{
    int start = 0;
    int end = arr.Length-1;
    for (int i = 0; i < intArray.Length-1; i++)
    {
        int mid = (start + end)/2;
        if (arr[mid] == target)
        {
            start = 0;
            end = arr.Length-1;
            return mid;
        }
        else if (arr[mid] > target)
        {
            end = mid-1;
        }
        else if (arr[mid] < target)
        {
            start = mid+1;
        }
    }
    return -1;
}
BinarySearch(intArray, 0);
```

```csharp
//Using Recursion
int[] intArray = {0, 1, 3, 7, 9, 12, 13, 23, 45};
int start = 0;
int end = intArray.Length-1;
public int BinarySearch(int [] arr, int target)
{
    int mid = (start + end)/2;
    if (arr[mid] == target)
    {
        start = 0;
        end = arr.Length-1;
        return mid;
    }
    else if (arr[mid] > target)
    {
        end = mid-1;
        return BinarySearch(arr, target);
    }
    else if (arr[mid] < target)
    {
        start = mid+1;
        return BinarySearch(arr, target);
    }
    return -1;
}
BinarySearch(intArray, 7);
```